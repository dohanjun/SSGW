<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.group.mapper.MailMapper">

<!-- 단건조회 -->
	<select id="getPageList" parameterType="PageListVO" resultType="PageListVO">
		SELECT  *
		FROM Mail
		WHERE MAIL_ID = #{mailId}
	</select>
	

<sql id="mailCondition">
		  <where>
		  	<if test="search != null and search != ''">
		  		( TITLE LIKE '%' || #{search} || '%'
		  		OR GET_USER LIKE '%' || #{search} || '%'
		  		OR RECODE LIKE '%' || #{search} || '%' )
		  	</if>	
		  	<if test="mailType != null">
     			and mail_type = #{mailType}
   			 </if>
		  </where>
</sql>

 
	<!-- 메일전체조회 -->
	<select id="findAll" resultType="MailVO">
	SELECT B.* FROM ( SELECT A.*, ROWNUM RN FROM(
	SELECT   mail_id
	        ,title
	        ,content
	        ,sent_state
	        ,sent_date
	        ,employee_id
	        ,attached_file_name
	        ,get_user
	        ,cc
	        ,recode
	        ,mail_type
	FROM Mail
	<include refid="mailCondition"></include>
	  	ORDER BY
	  	<choose>
	  		<when test='sortKey !=  null and sortKey.equals("list")'>
	  			TITLE
	  		</when>
	  		<when test='"file".equals(sortKey)'>
	  			ATTACHED_FILE_NAME
	  		</when>
	  		<when test='sortKey !=  null and sortKey.equals("desc")'>
	  			mail_Id  DESC
	  		</when>
	  		<when test='sortKey !=  null and sortKey.equals("asc")'>
	  			mail_id ASC
	  		</when>
	  		<otherwise>
	  			mail_id DESC
	  		</otherwise>
	  	</choose>
	) A ) B WHERE RN BETWEEN #{start} AND #{end}
	</select>

	<!-- 메일단건조회 -->
	<select id="findInfo" resultType="MailVO">
	SELECT   mail_id
	        ,title
	        ,content
	        ,sent_state
	        ,sent_date
	        ,employee_id
	        ,attached_file_name
	        ,get_user
	        ,cc
	        ,recode
	        ,mail_type
	FROM Mail
	WHERE mail_id = #{mailId}
	</select>
	
	<!-- 나의메일단건조회 -->
	<select id="MyfindInfo" resultType="MailVO">
	SELECT   mail_id
	        ,title
	        ,content
	        ,sent_state
	        ,sent_date
	        ,employee_id
	        ,attached_file_name
	        ,get_user
	        ,cc
	        ,recode
	        ,mail_type
	FROM Mail
	WHERE mail_id = #{mailId}
	</select>
	
	<!-- 메일등록 -->
	<insert id="create" parameterType="MailVO">
	<selectKey keyProperty="mailId" resultType="Integer" order="BEFORE">
	SELECT NVL(MAX(mail_id) + 1, 100) as mail_id
	FROM Mail
	</selectKey>
	INSERT INTO Mail(
                  mail_id
                 ,title
                 ,content
                 ,sent_state
                 ,sent_date
                 ,employee_id
                 ,attached_file_name
                 ,get_user
                 ,cc
                 ,mail_type)
    VALUES(
    			 #{mailId}
    			 ,#{title}
    			 ,#{content}
    			 ,#{sentState}
    			 <choose>
    			   <when test="sentDate !=null">
    			 	,#{sentDate}
    			   </when>
    			    <otherwise>
    			   		,sysdate
    			    </otherwise>
   				 </choose>
    			 ,#{employeeId}
    			 ,#{attachedFileName}
    			 ,#{getUser}
    			 ,#{cc}
    			 ,#{mailType})
	</insert>
	
	<!-- 메일검색기록 -->
	<insert id="RecodeMail" parameterType="MailVO">
	INSERT INTO Mail recode
    VALUES      #{recode}
	</insert>
	
	<!-- 메일수정 -->
	<update id="modify" parameterType="MailVO">
	UPDATE  Mail
	   SET  get_user = #{getUser}
	       ,cc = #{cc}
	       ,title = #{title}
	       ,attached_file_name = #{attachedFileName}
	       ,content = #{content}
    WHERE   Mail_id = #{mailId}
	</update>
	
	<!-- 메일답장 -->
	<update id="PutDateMail" parameterType="MailVO">
	UPDATE  Mail
	   SET  get_user = #{getUser}
	       ,cc = #{cc}
	       ,content = #{content}
    WHERE   Mail_id = #{mailId}
	</update>
	
	<!-- 메일전달 -->
	<update id="VeryMail" parameterType="MailVO">
	<selectKey keyProperty="mailId" resultType="Integer" order="BEFORE">
	SELECT NVL(MAX(mail_id) + 1, 100) as mail_id
	FROM Mail

	SELECT   mail_id
	        ,title
	        ,content
	        ,sent_state
	        ,sent_date
	        ,employee_id
	        ,attached_file_name
	        ,get_user
	        ,cc
	        ,recode
	        ,mail_type
	FROM Mail
	WHERE mail_id = #{mailId}
	</selectKey>
	UPDATE content
	FROM Mail
	WHERE mail_id = #{mailId}
	</update>
	
	<!-- 메일삭제 -->
	<delete id="remove" parameterType="int">
	DELETE FROM Mail
	WHERE mail_id = #{mailId}
	</delete>
	
	<!-- 전체건수반환 -->
	<select id="getCount" resultType="int">
	SELECT COUNT(*)
	FROM Mail
	<include refid="mailCondition"></include>
	</select>
</mapper>