<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.group.mapper.PostMapper">

	<!-- 게시글 등록 -->
    <insert id="insertPost" parameterType="com.yedam.app.group.service.RepositoryPostVO" keyProperty="writingId">
      <selectKey keyProperty="writingId" resultType="java.lang.Long" order="AFTER">
        SELECT REPOSITORY_POST_SEQ.CURRVAL FROM DUAL
      </selectKey>
        INSERT INTO repository_post (writing_id, title, content, employee_no, file_repository_id, creation_date)
        VALUES (REPOSITORY_POST_SEQ.NEXTVAL, #{title}, #{content}, #{employeeNo}, #{fileRepositoryId}, SYSDATE)
    </insert>

    <!-- 전체 자료실 조회 -->
    <select id="getTotalRepository" parameterType="int" resultType="com.yedam.app.group.service.RepositoryVO">
        SELECT file_repository_id 
        FROM repository WHERE suber_no = #{suberNo} AND file_repository_type = '전체'
    </select>

    <!-- 부서 자료실 조회 -->
    <select id="getDepartmentRepository" parameterType="map" resultType="com.yedam.app.group.service.RepositoryVO">
        SELECT file_repository_id
        FROM repository WHERE suber_no = #{suberNo} AND department_no = #{departmentNo} AND file_repository_type = '부서'
    </select>

    <!-- 개인 자료실 조회 -->
    <select id="getIndividualRepository" parameterType="map" resultType="com.yedam.app.group.service.RepositoryVO">
        SELECT file_repository_id
        FROM repository WHERE suber_no = #{suberNo} AND employee_no = #{employeeNo} AND file_repository_type = '개인'
    </select>
    
    <select id="selectFixedPosts" parameterType="map" resultType="com.yedam.app.group.service.RepositoryPostVO">
    SELECT 
        p.writing_id,
        p.title,
        p.fix,
        p.employee_no,
        e.employee_name AS writer,
        p.creation_date,
        MIN(f.file_name) AS fileName,
        COUNT(f.file_id) AS fileCount,
        r.file_repository_type AS repositoryType
    FROM repository_post p
    JOIN employees e ON p.employee_no = e.employee_no
    JOIN repository r ON p.file_repository_id = r.file_repository_id
    LEFT JOIN repository_file f ON p.writing_id = f.writing_id
    WHERE r.suber_no = #{suberNo}
      AND r.file_repository_type = '전체'
      AND p.fix = 'Y'
      AND p.writing_id NOT IN (SELECT writing_id FROM basket)
      <if test="keyword != null and keyword != ''">
        AND (
          LOWER(p.title) LIKE '%' || LOWER(#{keyword}) || '%' OR
          LOWER(p.content) LIKE '%' || LOWER(#{keyword}) || '%' OR
          LOWER(e.employee_name) LIKE '%' || LOWER(#{keyword}) || '%' OR
          LOWER(f.file_name) LIKE '%' || LOWER(#{keyword}) || '%'
        )
      </if>
    GROUP BY p.writing_id, p.title, p.fix, p.employee_no, e.employee_name, p.creation_date, r.file_repository_type
    ORDER BY p.creation_date DESC
</select>

<select id="selectDepartmentFixedPosts" parameterType="map" resultType="com.yedam.app.group.service.RepositoryPostVO">
    SELECT 
        p.writing_id,
        p.title,
        p.fix,
        p.employee_no,
        e.employee_name AS writer,
        p.creation_date,
        MIN(f.file_name) AS fileName,
        COUNT(f.file_id) AS fileCount,
        r.file_repository_type AS repositoryType
    FROM repository_post p
    JOIN employees e ON p.employee_no = e.employee_no
    JOIN repository r ON p.file_repository_id = r.file_repository_id
    LEFT JOIN repository_file f ON p.writing_id = f.writing_id
    WHERE r.suber_no = #{suberNo}
      AND r.department_no = #{departmentNo}
      AND r.file_repository_type = '부서'
      AND p.fix = 'Y'
      AND p.writing_id NOT IN (SELECT writing_id FROM basket)
      <if test="keyword != null and keyword != ''">
        AND (
          LOWER(p.title) LIKE '%' || LOWER(#{keyword}) || '%' OR
          LOWER(p.content) LIKE '%' || LOWER(#{keyword}) || '%' OR
          LOWER(e.employee_name) LIKE '%' || LOWER(#{keyword}) || '%' OR
          LOWER(f.file_name) LIKE '%' || LOWER(#{keyword}) || '%'
        )
      </if>
    GROUP BY p.writing_id, p.title, p.fix, p.employee_no, e.employee_name, p.creation_date, r.file_repository_type
    ORDER BY p.creation_date DESC
</select>
    
    <!-- 전체 자료실 게시글 목록 조회 -->
    <select id="selectTotalRepositoryPostsPaged" parameterType="map" resultType="com.yedam.app.group.service.RepositoryPostVO">
    SELECT * FROM (
        SELECT 
            p.writing_id,
            p.title,
            p.fix,
            p.employee_no,
            e.employee_name AS writer,
            p.creation_date,
            MIN(f.file_name) AS fileName,
            COUNT(f.file_id) AS fileCount,
            r.file_repository_type AS repositoryType,
            ROW_NUMBER() OVER (ORDER BY p.fix DESC, p.creation_date DESC, p.writing_id DESC) AS rn
        FROM repository_post p
        JOIN employees e ON p.employee_no = e.employee_no
        JOIN repository r ON p.file_repository_id = r.file_repository_id
        LEFT JOIN repository_file f ON p.writing_id = f.writing_id
        WHERE r.suber_no = #{suberNo}
          AND r.file_repository_type = '전체'
          AND p.writing_id NOT IN (SELECT writing_id FROM basket)
          <if test="keyword != null and keyword != ''">
            AND (
              LOWER(p.title) LIKE '%' || LOWER(#{keyword}) || '%' OR
              LOWER(p.content) LIKE '%' || LOWER(#{keyword}) || '%' OR
              LOWER(e.employee_name) LIKE '%' || LOWER(#{keyword}) || '%' OR
              LOWER(f.file_name) LIKE '%' || LOWER(#{keyword}) || '%'
            )
          </if>
        GROUP BY p.writing_id, p.title, p.fix, p.employee_no, e.employee_name, p.creation_date, r.file_repository_type
    ) 
    WHERE rn BETWEEN #{offset} + 1 AND #{offset} + #{limit}
</select>

<select id="countTotalRepositoryPosts" resultType="int">
    SELECT COUNT(DISTINCT p.writing_id)
    FROM repository_post p
    JOIN employees e ON p.employee_no = e.employee_no
    JOIN repository r ON p.file_repository_id = r.file_repository_id
    LEFT JOIN repository_file f ON p.writing_id = f.writing_id
    WHERE r.suber_no = #{suberNo}
      AND r.file_repository_type = '전체'
      AND p.writing_id NOT IN (SELECT writing_id FROM basket)
      <if test="keyword != null and keyword != ''">
        AND (
          LOWER(p.title) LIKE '%' || LOWER(#{keyword}) || '%' OR
          LOWER(p.content) LIKE '%' || LOWER(#{keyword}) || '%' OR
          LOWER(e.employee_name) LIKE '%' || LOWER(#{keyword}) || '%' OR
          LOWER(f.file_name) LIKE '%' || LOWER(#{keyword}) || '%'
        )
      </if>
</select>

    <!-- 부서 자료실 게시글 수 -->
<select id="getDepartmentRepositoryPostCount" resultType="int">
    SELECT COUNT(DISTINCT p.writing_id)
    FROM repository_post p
    JOIN employees e ON p.employee_no = e.employee_no
    JOIN repository r ON p.file_repository_id = r.file_repository_id
    LEFT JOIN repository_file f ON p.writing_id = f.writing_id
    WHERE r.suber_no = #{suberNo}
      AND r.department_no = #{departmentNo}
      AND r.file_repository_type = '부서'
      AND p.writing_id NOT IN (SELECT writing_id FROM basket)
      <if test="keyword != null and keyword != ''">
        AND (
          LOWER(p.title) LIKE '%' || LOWER(#{keyword}) || '%' OR
          LOWER(p.content) LIKE '%' || LOWER(#{keyword}) || '%' OR
          LOWER(e.employee_name) LIKE '%' || LOWER(#{keyword}) || '%' OR
          LOWER(f.file_name) LIKE '%' || LOWER(#{keyword}) || '%'
        )
      </if>
</select>

<!-- 부서 자료실 페이징 리스트 -->
<select id="getDepartmentRepositoryPostsPaged" resultType="com.yedam.app.group.service.RepositoryPostVO">
    SELECT * FROM (
        SELECT 
            p.writing_id,
            p.title,
            p.fix,
            p.employee_no,
            e.employee_name AS writer,
            p.creation_date,
            MIN(f.file_name) AS fileName,
            COUNT(f.file_id) AS fileCount,
            r.file_repository_type AS repositoryType,
            ROW_NUMBER() OVER (ORDER BY p.fix DESC, p.creation_date DESC, p.writing_id DESC) AS rn
        FROM repository_post p
        JOIN employees e ON p.employee_no = e.employee_no
        JOIN repository r ON p.file_repository_id = r.file_repository_id
        LEFT JOIN repository_file f ON p.writing_id = f.writing_id
        WHERE r.suber_no = #{suberNo}
          AND r.department_no = #{departmentNo}
          AND r.file_repository_type = '부서'
          AND p.writing_id NOT IN (SELECT writing_id FROM basket)
          <if test="keyword != null and keyword != ''">
            AND (
              LOWER(p.title) LIKE '%' || LOWER(#{keyword}) || '%' OR
              LOWER(p.content) LIKE '%' || LOWER(#{keyword}) || '%' OR
              LOWER(e.employee_name) LIKE '%' || LOWER(#{keyword}) || '%' OR
              LOWER(f.file_name) LIKE '%' || LOWER(#{keyword}) || '%'
            )
          </if>
        GROUP BY p.writing_id, p.title, p.fix, p.employee_no, e.employee_name, p.creation_date, r.file_repository_type
    ) 
    WHERE rn BETWEEN #{offset} + 1 AND #{offset} + #{limit}
</select>

    <!-- 개인 자료실 게시글 수 -->
<select id="getIndividualRepositoryPostCount" resultType="int">
    SELECT COUNT(DISTINCT p.writing_id)
    FROM repository_post p
    JOIN employees e ON p.employee_no = e.employee_no
    JOIN repository r ON p.file_repository_id = r.file_repository_id
    LEFT JOIN repository_file f ON p.writing_id = f.writing_id
    WHERE r.suber_no = #{suberNo}
      AND r.employee_no = #{employeeNo}
      AND r.file_repository_type = '개인'
      AND p.writing_id NOT IN (SELECT writing_id FROM basket)
      <if test="keyword != null and keyword != ''">
        AND (
          LOWER(p.title) LIKE '%' || LOWER(#{keyword}) || '%' OR
          LOWER(p.content) LIKE '%' || LOWER(#{keyword}) || '%' OR
          LOWER(e.employee_name) LIKE '%' || LOWER(#{keyword}) || '%' OR
          LOWER(f.file_name) LIKE '%' || LOWER(#{keyword}) || '%'
        )
      </if>
</select>

<!-- 개인 자료실 페이징 리스트 -->
<select id="getIndividualRepositoryPostsPaged" resultType="com.yedam.app.group.service.RepositoryPostVO">
    SELECT * FROM (
        SELECT 
            p.writing_id,
            p.title,
            p.fix,
            p.employee_no,
            e.employee_name AS writer,
            p.creation_date,
            MIN(f.file_name) AS fileName,
            COUNT(f.file_id) AS fileCount,
            r.file_repository_type AS repositoryType,
            ROW_NUMBER() OVER (ORDER BY p.fix DESC, p.creation_date DESC, p.writing_id DESC) AS rn
        FROM repository_post p
        JOIN employees e ON p.employee_no = e.employee_no
        JOIN repository r ON p.file_repository_id = r.file_repository_id
        LEFT JOIN repository_file f ON p.writing_id = f.writing_id
        WHERE r.suber_no = #{suberNo}
          AND r.employee_no = #{employeeNo}
          AND r.file_repository_type = '개인'
          AND p.writing_id NOT IN (SELECT writing_id FROM basket)
          <if test="keyword != null and keyword != ''">
            AND (
              LOWER(p.title) LIKE '%' || LOWER(#{keyword}) || '%' OR
              LOWER(p.content) LIKE '%' || LOWER(#{keyword}) || '%' OR
              LOWER(e.employee_name) LIKE '%' || LOWER(#{keyword}) || '%' OR
              LOWER(f.file_name) LIKE '%' || LOWER(#{keyword}) || '%'
            )
          </if>
        GROUP BY p.writing_id, p.title, p.fix, p.employee_no, e.employee_name, p.creation_date, r.file_repository_type
    ) 
    WHERE rn BETWEEN #{offset} + 1 AND #{offset} + #{limit}
</select>
	
	<select id="getPostDetail" parameterType="long" resultType="com.yedam.app.group.service.RepositoryPostVO">
        SELECT 
            p.writing_id,
            p.title,
            p.content,
            e.employee_name AS writer,
            p.creation_date AS creationDate,
            p.employee_no,
            p.file_repository_id,
            p.fix,
            r.file_repository_type AS RepositoryType
        FROM repository_post p
        JOIN employees e ON p.employee_no = e.employee_no
        JOIN repository r ON p.file_repository_id = r.file_repository_id
        WHERE p.writing_id = #{writingId}
    </select>
    
    <update id="updatePost" parameterType="com.yedam.app.group.service.RepositoryPostVO">
    	UPDATE repository_post
    	SET title = #{title},
        	content = #{content}
    	WHERE writing_id = #{writingId}
	</update>
	
	<update id="updateFixStatus">
    	UPDATE repository_post
    	SET fix = #{fix}
    	WHERE writing_id = #{writingId}
	</update>
</mapper>